@startuml Applying_Consent_Sequence

title \n\n

participant "Data\nRecipient" as DR

box Amplify Open Banking #6FA8DC
participant "API\nGateway" as API_GATEWAY
participant "Core Banking\nConnector" as CBC
participant "Authorization\nServer" as IAM
end box


box Core Banking Applications #94c47d
participant "Banking\nSystems" as ASPSP_API
end box

hide footbox

skinparam BoxPadding 20

note right of DR
Overview
===
Filtering responses for account/permissions at the Gateway
is pragmatic in many use cases but is ultimately not scaleable
due to load and determinism for features such as pagination.
It should therefore be implemented as close to the system of record
as possible i.e. Core Banking Applications. The order of preference in
terms of solutions is:
|||
1. Filter at the Core Banking Application.
2. Filter at a microservice capable of "stateful" behaviour.
3. Filter at the Gateway.
end note

DR -> API_GATEWAY: Request Account Information Resource\nwith valid Access Token

API_GATEWAY -> IAM: Call JWKS Endpoint to validate JWT access token
API_GATEWAY <-- IAM: Return JWKS
API_GATEWAY -> API_GATEWAY: Validate token and get claims

alt DR does not have Consent for the requested account or resource

note right of DR
In some cases the permissions are binary i.e. the
DR does or does not have permission to access
a given endpoint. In such cases the Gateway can
immediately respond without going to the backend.
end note

DR <-- API_GATEWAY: Respond with 403 (Forbidden)

else DR has Consent to access requested resource

alt Filtering is performed outside Gateway
API_GATEWAY -> API_GATEWAY: Augment request\nwith consented accounts/permissions

alt Filtering is performed at Core Banking Application

API_GATEWAY -> CBC: Forward request with\nconsented accounts/permissions
CBC -> CBC: Create request for consented accounts
CBC -> ASPSP_API: Request data for consented accounts
ASPSP_API -> ASPSP_API: Retrieve data for consented accounts
ASPSP_API -> ASPSP_API: Apply permissions to requested data
CBC <-- ASPSP_API: Return data for consented accounts
API_GATEWAY <-- CBC: Return response

else Filtering is performed at Core Banking Connector

API_GATEWAY -> CBC: Forward request with\nconsented accounts/permissions
CBC -> CBC: Create request for consented accounts
CBC -> ASPSP_API: Request data for consented accounts
ASPSP_API -> ASPSP_API: Retrieve data for consented accounts
CBC <-- ASPSP_API: Return data for consented accounts
CBC -> CBC: Apply correct permissions to response data
API_GATEWAY <-- CBC: Return response

end alt
end alt

API_GATEWAY -> API_GATEWAY: Format response for standards
DR <-- API_GATEWAY: Return response

@enduml