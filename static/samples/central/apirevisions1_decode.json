{
    "swagger": "2.0",
    "info": {
       "title": "MusicalInstrumentsAPI",
       "description": "This is a sample Musical Instruments API.",
       "version": "2.0.4"
    },
    "host": "f0d9c067be62dc9adeb44b57bc0eeaa601631b47.cloudapp-enterprise.appcelerator.com",
    "basePath": "/music/v2",
    "schemes": [
       "http"
    ],
    "consumes": [
       "application/json"
    ],
    "produces": [
       "application/json"
    ],
    "paths": {
       "/instruments/{id}": {
          "get": {
             "responses": {
                "200": {
                   "description": "The find succeeded, and the results are available.",
                   "schema": {
                      "$ref": "#/definitions/instruments"
                   }
                },
                "400": {
                   "description": "Bad request."
                },
                "401": {
                   "description": "This request requires user authentication, as configured by the server."
                },
                "404": {
                   "description": "No results were found."
                },
                "500": {
                   "description": "Something went wrong during the request; check out the logs on your server."
                }
             },
             "description": "Find instrument by ID",
             "operationId": "FindInstrumentByID",
             "consumes": [
                "application/json"
             ],
             "parameters": [
                {
                   "name": "id",
                   "in": "path",
                   "description": "The instrument ID",
                   "required": true,
                   "type": "string"
                }
             ],
             "produces": [
                "application/json"
             ],
             "tags": [
                "instruments"
             ],
             "x-flow": "instruments-findByID"
          }
       },
       "/instruments": {
          "get": {
             "responses": {
                "200": {
                   "description": "The find all succeeded, and the results are available.",
                   "schema": {
                      "type": "array",
                      "items": {
                         "$ref": "#/definitions/instruments"
                      }
                   }
                },
                "401": {
                   "description": "This request requires user authentication, as configured by the server."
                },
                "404": {
                   "description": "No results were found."
                },
                "500": {
                   "description": "Something went wrong during the request; check out the logs on your server."
                }
             },
             "description": "Retrieve all instruments",
             "operationId": "FindInstruments",
             "consumes": [
                "application/json"
             ],
             "produces": [
                "application/json"
             ],
             "tags": [
                "instruments"
             ],
             "x-flow": "instruments-findAll"
          }
       },
       "/instruments/query": {
          "get": {
             "responses": {
                "200": {
                   "description": "The query succeeded, and the results are available.",
                   "schema": {
                      "type": "array",
                      "items": {
                         "$ref": "#/definitions/instruments"
                      }
                   }
                },
                "400": {
                   "description": "Bad request."
                },
                "401": {
                   "description": "This request requires user authentication, as configured by the server."
                },
                "404": {
                   "description": "No results were found."
                },
                "500": {
                   "description": "Something went wrong during the request; check out the logs on your server."
                }
             },
             "description": "Query instrument(s)",
             "operationId": "QueryInstrument",
             "consumes": [
                "application/json"
             ],
             "parameters": [
                {
                   "in": "query",
                   "name": "limit",
                   "description": "The number of records to fetch. The value must be greater than 0, and no greater than 1000.",
                   "required": false,
                   "type": "number",
                   "default": 10
                },
                {
                   "in": "query",
                   "name": "skip",
                   "description": "The number of records to skip. The value must not be less than 0.",
                   "required": false,
                   "type": "number",
                   "default": 0
                },
                {
                   "in": "query",
                   "name": "where",
                   "description": "Constrains values for fields. The value should be encoded JSON.",
                   "required": false,
                   "type": "string",
                   "format": "json"
                },
                {
                   "in": "query",
                   "name": "order",
                   "description": "A dictionary of one or more fields specifying sorting of results. In general, you can sort based on any predefined field that you can query using the where operator, as well as on custom fields. The value should be encoded JSON.",
                   "required": false,
                   "type": "string",
                   "format": "json"
                },
                {
                   "in": "query",
                   "name": "sel",
                   "description": "Selects which fields to return from the query. Others are excluded. The value should be encoded JSON.",
                   "required": false,
                   "type": "string",
                   "format": "json"
                },
                {
                   "in": "query",
                   "name": "unsel",
                   "description": "Selects which fields to not return from the query. Others are included. The value should be encoded JSON.",
                   "required": false,
                   "type": "string",
                   "format": "json"
                },
                {
                   "in": "query",
                   "name": "page",
                   "description": "Request page number starting from 1.",
                   "required": false,
                   "type": "number",
                   "default": 1
                },
                {
                   "in": "query",
                   "name": "per_page",
                   "description": "Number of results per page.",
                   "required": false,
                   "type": "number",
                   "default": 10
                }
             ],
             "produces": [
                "application/json"
             ],
             "tags": [
                "instruments"
             ],
             "x-flow": "instruments-query"
          }
       }
    },
    "definitions": {
       "instruments": {
          "type": "object",
          "properties": {
             "type": {
                "description": "The type of instrument.",
                "type": "string"
             },
             "price": {
                "description": "The price of the instrument.",
                "type": "integer"
             },
             "currency": {
                "description": "The price currency.",
                "type": "string"
             }
          }
       }
    }
 }